{"version":3,"sources":["umdWrapper.js","preamble.js","lib/immutato.js"],"names":["name","factory","define","amd","exports","module","_require","index","cache","id","modules","call","I","buildFirstPropertyIndexes","keysLength","propertyIndexes","i","indexGeneration","Object","freeze","get","opts","propertyIndex","propertyName","transactions","transactionIndex","transaction","set","value","Contructor","newTransaction","push","newPropertyIndexes","length","propertyIndexDescriptor","create","mkGetterSetter","getterSetter","data","keys","Proto","prototype"],"mappings":"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","file":"immutato.js","sourceRoot":"/source/","sourcesContent":[null,null,"'use strict';\n\nvar I = (function(){\n\n\n    function buildFirstPropertyIndexes(keysLength){\n        var propertyIndexes = /*new Array(keysLength)*/ {};\n         //All properties start at transaction index 0\n        var i = keysLength;\n        while(i--){\n            propertyIndexes[i] = 0;\n        }\n        propertyIndexes.indexGeneration = 0;\n\n        Object.freeze(propertyIndexes);\n        return propertyIndexes;\n    }\n\n    function get(propertyIndexes, opts) {\n        var propertyIndex = opts.propertyIndex;\n        var propertyName = opts.propertyName;\n        var transactions = opts.transactions;\n\n        var transactionIndex = propertyIndexes[propertyIndex];\n        var transaction = transactions[transactionIndex];\n\n        return transaction[propertyName];\n    }\n\n    function set(value, propertyIndexes, opts) {\n        var propertyIndex = opts.propertyIndex;\n        var propertyName = opts.propertyName;\n        var transactions = opts.transactions;\n        var keysLength = opts.keysLength;\n        var Contructor = opts.Contructor;\n\n        //TODO: check for data immutability or do a shallow copy\n        //of input data\n\n        //save new transaction\n        var newTransaction = {};\n        newTransaction[propertyName] = value;\n        transactions.push(newTransaction);\n        //console.log('transactions: ', JSON.stringify(transactions,null,4))\n\n        //create new propertyIndex for prop\n        //it points to last transaction position\n\n        var newPropertyIndexes;\n\n        if (propertyIndexes.indexGeneration === 100) {\n            //console.log('new prop index using object copy');\n\n            newPropertyIndexes = /*new Array(keysLength)*/ {};\n            var i = keysLength;\n            while (i--) {\n                newPropertyIndexes[i] = propertyIndexes[i];\n            }\n\n            newPropertyIndexes[propertyIndex] = transactions.length -1;\n            newPropertyIndexes.indexGeneration = 0;\n\n        } else {\n\n            //console.log('new prop index using object create');\n\n            var propertyIndexDescriptor = {\n                indexGeneration: {\n                    value: propertyIndexes.indexGeneration + 1\n                }\n            };\n            propertyIndexDescriptor[propertyIndex] = {\n                value: transactions.length -1\n            };\n            //console.log('propertyIndexDescriptor: ', JSON.stringify(propertyIndexDescriptor,null,4))\n            newPropertyIndexes = Object.create(propertyIndexes, propertyIndexDescriptor);\n        }\n\n\n        //console.log('propertyIndexes: ', JSON.stringify(propertyIndexes,null,4))\n        //console.log('newPropertyIndexes: ', JSON.stringify(newPropertyIndexes,null,4))\n        Object.freeze(newPropertyIndexes);\n\n        //return new instance, give new property\n        //indexes\n        return new Contructor(newPropertyIndexes);\n    }\n\n    function mkGetterSetter(opts) {\n        return function getterSetter(value) {\n            if (typeof value === 'undefined') {\n                return get(this.propertyIndexes, opts);\n            } else {\n                return set(value, this.propertyIndexes,opts);\n            }\n        };\n    }\n\n    function I(data){\n        //cache key names\n        var keys = Object.keys(data);\n        var keysLength = keys.length;\n\n        //TODO: check for data immutability or do a shallow copy\n        //of input data\n\n\n        var transactions = [data];\n        var propertyIndexes = buildFirstPropertyIndexes(keysLength);\n        var Proto = {};\n\n        function Contructor(propertyIndexes){\n            this.propertyIndexes = propertyIndexes;\n            Object.freeze(this);\n        }\n        Contructor.prototype = Proto;\n\n        //\n        // build getter/setter for all properties\n        // and save them in prototype.\n        //\n\n        var i = keysLength;\n        while(i--){\n            var opts = {\n                propertyIndex: i,\n                propertyName: keys[i],\n                transactions: transactions,\n                Contructor: Contructor,\n                keysLength: keysLength\n            };\n\n            Proto[opts.propertyName] = mkGetterSetter(opts);\n        }\n\n        Object.freeze(Proto);\n\n        \n        return new Contructor(propertyIndexes);\n\n\n    }\n\n    return I;\n})();\n\n\nmodule.exports = I;\n"]}