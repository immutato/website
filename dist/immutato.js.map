{"version":3,"sources":["umdWrapper.js","preamble.js","lib/immutato.js"],"names":["name","factory","define","amd","exports","module","_require","index","cache","id","modules","call","THRESHOLD","I","cacheCount","caches","buildPropertyIndexes","keysLength","propertyIndexes","Array","i","k","buildFirstPropertyIndexes","console","log","get","self","opts","instanceId","propertyIndex","transactionsForClass","transactionIndex","transactions","transaction","create","C","proto","properties","prototype","instance","Object","defineProperties","set","value","Contructor","newTransaction","push","newPropertyIndexes","mkGetterSetter","getterSetter","dataSample","keys","length","Proto","dispose","clonedData","propertyName","data","res"],"mappings":"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","file":"immutato.js","sourceRoot":"/source/","sourcesContent":[null,null,"'use strict';\n\nvar THRESHOLD = 100;\n\nvar I = (function() {\n    var cacheCount = 300;\n    var caches = [];\n\n    function buildPropertyIndexes(keysLength) {\n        var propertyIndexes = new Array(keysLength);\n        var i = keysLength;\n        while (i--) {\n            propertyIndexes[i] = 0;\n        }\n        //propertyIndexes.generation = 0;\n        //Object.freeze(propertyIndexes);\n        return propertyIndexes;\n    }\n    var k = cacheCount;\n\n    while (k--) {\n        caches[k] = buildPropertyIndexes(k);\n    }\n\n\n    function buildFirstPropertyIndexes(keysLength) {\n        //return new Uint8Array(keysLength);\n\n\n        if (keysLength > cacheCount) {\n            console.log('CACHE REBUILD');\n            return buildPropertyIndexes(keysLength);\n        } else {\n            return caches[keysLength];\n\n        }\n\n\n    }\n\n\n    function get(self, opts) {\n        //console.dir(opts.transactionsForClass)\n\n        var propertyIndexes = self.propertyIndexes;\n        var instanceId = self.instanceId;\n        var propertyIndex = opts.propertyIndex;\n        //var propertyName = opts.propertyName;\n        var transactionsForClass = opts.transactionsForClass;\n        var transactionIndex = propertyIndexes[propertyIndex];\n        var transactions = transactionsForClass[instanceId];\n        var transaction = transactions[transactionIndex];\n\n\n        return transaction[propertyIndex];\n    }\n\n\n    var create = (function() {\n        function C() {}\n        return function create(proto, properties) {\n\n            C.prototype = proto;\n            var instance = new C();\n\n            return Object.defineProperties(instance, properties);\n        };\n    })();\n\n    function set(value, self, opts) {\n        var propertyIndexes = self.propertyIndexes;\n        var instanceId = self.instanceId;\n        var propertyIndex = opts.propertyIndex;\n        var transactionsForClass = opts.transactionsForClass;\n        var Contructor = opts.Contructor;\n        var transactions = transactionsForClass[instanceId];\n        var keysLength = opts.keysLength;\n\n        //TODO: check for data immutability or do a shallow copy\n        //of input data\n\n        //save new transaction\n        var newTransaction = new Array(propertyIndex + 1);\n        newTransaction[propertyIndex] = value;\n        transactions.push(newTransaction);\n\n        //create new propertyIndex for prop\n        //it points to last transaction position\n        var newPropertyIndexes  = new Array(keysLength);\n        //newPropertyIndexes.generation:0};\n        var i = keysLength;\n        while (i--) {\n            newPropertyIndexes[i] = propertyIndexes[i];\n        }\n/*\n        var buffer = propertyIndexes.buffer;\n        var newBuffer = buffer.slice(0);\n        var newPropertyIndexes = new Uint8Array(newBuffer);\n        newPropertyIndexes[propertyIndex] = transactions.length -1;\n*/\n\n        //return new instance, give new property\n        //indexes\n        return new Contructor(newPropertyIndexes, instanceId);\n    }\n\n    function mkGetterSetter(opts) {\n        return function getterSetter(value) {\n            if (typeof value === 'undefined') {\n                return get(this, opts);\n            } else {\n                return set(value, this, opts);\n            }\n        };\n    }\n\n    function I(dataSample) {\n\n        //cache key names\n        var keys = Object.keys(dataSample);\n        var keysLength = keys.length;\n\n\n\n        //TODO: check for data immutability or do a shallow copy\n        //of input data\n        \n\n        var transactionsForClass = [];\n\n\n        //\n        // build getter/setter for all properties\n        // and save them in prototype.\n        //\n        var Proto = {\n            dispose: function() {\n                transactionsForClass[this.instanceId] = null;\n            }\n        };\n        var i = keysLength;\n        var clonedData = {};\n\n        while (i--) {\n\n\n            var opts = {\n                propertyIndex: i,\n                transactionsForClass: transactionsForClass,\n                Contructor: Contructor,\n                keysLength: keysLength\n            };\n\n            var propertyName = keys[i];\n            Proto[propertyName] = mkGetterSetter(opts);\n        }\n\n        function Contructor(propertyIndexes, instanceId) {\n            this.propertyIndexes = propertyIndexes;\n            this.instanceId = instanceId;\n\n        }\n\n        //Object.freeze(Proto);\n\n        Contructor.prototype = Proto;\n\n        var instanceId = 0;\n\n        return function(data) {\n            var propertyIndexes = buildFirstPropertyIndexes(keysLength);\n            var clonedData = [];\n\n            i = 0;\n            while (i < keysLength) {\n                clonedData.push(data[keys[i]]);\n                i++;\n            }\n            //console.dir(clonedData)\n            transactionsForClass[instanceId] = [clonedData];\n            var res = new Contructor(propertyIndexes, instanceId);\n\n            instanceId++;\n\n            return res;\n        };\n\n\n\n\n    }\n\n    return I;\n})();\n\n\nmodule.exports = I;\n"]}