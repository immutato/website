{"version":3,"sources":["umdWrapper.js","preamble.js","lib/immutato.js"],"names":["name","factory","define","amd","exports","module","_require","index","cache","id","modules","call","I","cacheCount","caches","buildPropertyIndexes","keysLength","propertyIndexes","i","indexGeneration","k","buildFirstPropertyIndexes","console","log","get","self","opts","instanceId","propertyIndex","transactionsForClass","transactionIndex","transactions","transaction","create","C","proto","properties","prototype","instance","Object","defineProperties","set","value","Contructor","newTransaction","Array","push","newPropertyIndexes","propertyIndexDescriptor","length","mkGetterSetter","getterSetter","dataSample","keys","Proto","clonedData","propertyName","data","res"],"mappings":"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","file":"immutato.js","sourceRoot":"/source/","sourcesContent":[null,null,"'use strict';\n\nvar I = (function () {\n    var cacheCount = 300;\n    var caches = [];\n\n    function buildPropertyIndexes(keysLength) {\n        var propertyIndexes = {};\n        var i = keysLength;\n        while (i--) {\n            propertyIndexes[i] = 0;\n        }\n        propertyIndexes.indexGeneration = 0;\n        //Object.freeze(propertyIndexes);\n        return propertyIndexes;\n    }\n    var k = cacheCount;\n\n    while(k--) {\n        caches[k] = buildPropertyIndexes(k);\n    }\n\n\n    function buildFirstPropertyIndexes(keysLength) {\n        if (keysLength > cacheCount) {\n            console.log('CACHE REBUILD');\n            return buildPropertyIndexes(keysLength);\n        } else{\n            return caches[keysLength];\n\n        }\n\n\n    }\n\n\n    function get(self, opts) {\n        //console.dir(opts.transactionsForClass)\n\n        var propertyIndexes = self.propertyIndexes;\n        var instanceId = self.instanceId;\n        var propertyIndex = opts.propertyIndex;\n        //var propertyName = opts.propertyName;\n        var transactionsForClass = opts.transactionsForClass;\n        var transactionIndex = propertyIndexes[propertyIndex];\n        var transactions = transactionsForClass[instanceId];\n        var transaction = transactions[transactionIndex];\n\n\n        return transaction[propertyIndex];\n    }\n\n\n    var create = (function() {\n        function C(){}\n        return function create(proto, properties) {\n            C.prototype = proto;\n            var instance = new C();\n\n            return Object.defineProperties(instance, properties);\n        };\n    })();\n\n    function set(value, self, opts) {\n        var propertyIndexes = self.propertyIndexes;\n        var instanceId = self.instanceId;\n        var propertyIndex = opts.propertyIndex;\n        var transactionsForClass = opts.transactionsForClass;\n        var Contructor = opts.Contructor;\n        var transactions = transactionsForClass[instanceId];\n\n        //TODO: check for data immutability or do a shallow copy\n        //of input data\n\n        //save new transaction\n        var newTransaction = new Array(propertyIndex+1);\n        newTransaction[propertyIndex] = value;\n        transactions.push(newTransaction);\n\n        //create new propertyIndex for prop\n        //it points to last transaction position\n        var newPropertyIndexes;\n        var propertyIndexDescriptor = {};\n        propertyIndexDescriptor[propertyIndex] = {\n            value: transactions.length -1\n        };\n\n        newPropertyIndexes = create(propertyIndexes, propertyIndexDescriptor);\n\n        //return new instance, give new property\n        //indexes\n        return new Contructor(newPropertyIndexes, instanceId);\n    }\n\n    function mkGetterSetter(opts) {\n        return function getterSetter(value) {\n            if (typeof value === 'undefined') {\n                return get(this, opts);\n            } else {\n                return set(value, this, opts);\n            }\n        };\n    }\n\n    function I(dataSample){\n\n        //cache key names\n        var keys = Object.keys(dataSample);\n        var keysLength = keys.length;\n\n\n\n        //TODO: check for data immutability or do a shallow copy\n        //of input data\n        var transactionsForClass = [];\n\n\n        //\n        // build getter/setter for all properties\n        // and save them in prototype.\n        //\n        var Proto = {};\n        var i = keysLength;\n        var clonedData = {};\n\n        while(i--) {\n\n\n            var opts = {\n                propertyIndex: i,\n                //propertyName: propertyName,\n                transactionsForClass: transactionsForClass,\n                Contructor: Contructor,\n                keysLength: keysLength\n            };\n\n            var propertyName = keys[i];\n            Proto[propertyName] = mkGetterSetter(opts);\n        }\n\n        function Contructor(propertyIndexes, instanceId){\n            this.propertyIndexes = propertyIndexes;\n            this.instanceId = instanceId;\n\n        }\n\n        //Object.freeze(Proto);\n\n        Contructor.prototype = Proto;\n\n        var instanceId = 0;\n\n        return function(data) {\n            var propertyIndexes = buildFirstPropertyIndexes(keysLength);\n            var clonedData = [];\n\n            i = 0;\n            while(i < keysLength) {\n                clonedData.push(data[keys[i]]);\n                i++;\n            }\n            //console.dir(clonedData)\n            transactionsForClass[instanceId] = [clonedData];\n            var res =  new Contructor(propertyIndexes, instanceId);\n\n            instanceId++;\n\n            return res;\n        };\n\n\n\n\n    }\n\n    return I;\n})();\n\n\nmodule.exports = I;\n"]}